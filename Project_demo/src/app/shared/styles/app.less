@import './globalVars.less';
@import '../../../../node_modules/ngx-toastr/toastr.css';
@import '../../../../node_modules/dragula/dist/dragula.css';

@font-face {
  font-family: 'open_sans';
  src: url('../../../assets/font/OpenSans-Light-webfont.woff') format('woff'),
    url('../../../assets/font/OpenSans-Light.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'open_sans';
  src: url('../../../assets/font/OpenSans-Semibold-webfont.woff') format('woff'),
    url('../../../assets/font/OpenSans-Semibold.ttf') format('truetype');
  font-weight: bold;
  font-style: normal;
}
html {
  position: relative;
  min-height: 100%;
}
body {
  font-family: open_sans;
  font-size: @base-font;
  height: 100%;
}

.upper-case {
  text-transform: uppercase;
}

.lower-case {
  text-transform: lowercase;
}

a {
  &:hover,
  &:focus {
    text-decoration: none;
  }

  &.primary {
    background-color: @blue-underline;
    color: @background-form;
  }

  &.default {
    border-width: 2px;
    border-color: @accent-blue;
    border-style: solid;
    color: @accent-blue;
  }

  &.blue {
    border-color: @accent-blue;
    border-style: solid;
    color: @white-font;
    background: @accent-blue;
  }

  &.primary,
  &.default,
  &.blue {
    border-radius: 50px;
    box-shadow: none;
    text-transform: uppercase;

    .mat-button-focus-overlay,
    .mat-button-ripple {
      border-radius: 50px;
    }
  }

  &.no_decoration {
    box-shadow: none;
    text-transform: uppercase;
    background-color: transparent !important;
    padding: 0;
    min-width: 1px;
  }

  &.mat-raised-button {
    &[disabled] {
      border: 2px solid @disabled-light;
      cursor: not-allowed;
    }
  }

  &.inverse {
    border-color: white;
    color: white;
    background-color: transparent;
    &[disabled] {
      background-color: @disabled-light !important;
    }
  }
}

.mobile-only {
  display: none !important;
  @media only screen and (max-width: 768px) {
    display: inherit !important;
  }
}

.desktop-only {
  display: none !important;
  @media only screen and (min-width: 769px) {
    display: inherit !important;
  }
}
/*****************************************************
  hide elements based on their coll size (xs/sm/md/lg)
 *****************************************************/
/*
  thehide -xs/sm/md/lg classes are to hide an element for only that column
 example: "hide-sm" will only hide the element when it's in the col-sm state
    it will show when it's col-xs or col-md or col-lg

  the hide-from-xs/sm/md/lg classes are to hide an element from the specified column and lower

    example: "hide-from-md" will hide the elment from col-md --> col-xs (md,sm & xs) will be hidden
*/
/**************
  only col-xs
***************/

/* Default display*/
.hide-lg,
.hide-md,
.hide-sm,
.hide-xs {
  display: inherit;
}
@media only screen and (max-width: @medium-screen-width) {
  .hide-xs {
    display: none !important;
  }
}
/**************
  only col-sm
***************/
@media only screen and (min-width: @medium-screen-width) and (max-width: @large-screen-width) {
  .hide-sm {
    display: none !important;
  }
}
/**************
  only col-md
***************/
@media only screen and (min-width: @large-screen-width) and (max-width: @extralarge-screen-width) {
  .hide-md {
    display: none !important;
  }
}
/**************
  only col-lg
***************/
@media only screen and (min-width: @extralarge-screen-width) {
  .hide-lg {
    display: none !important;
  }
}
/**************
  from col-xs
***************/
@media only screen and (min-width: @medium-screen-width) {
  .hide-from-xs {
    display: none;
  }
}
/**************
  from col-sm
***************/
@media only screen and (min-width: @large-screen-width) {
  .hide-from-sm {
    display: none;
  }
}
/**************
  from col-md
***************/
@media only screen and (min-width: @extralarge-screen-width) {
  .hide-from-md {
    display: none;
  }
}
/****************************************
  hide from lg same as permanent hide
*****************************************/

.hide,
.hide-from-lg {
  display: none;
}
/*****************************************************
  show elements based on their coll size (xs/sm/md/lg)
 *****************************************************/
/*
  the show-xs/sm/md/lg classes are to show an element for only that column

    example: "show-sm" will only show the element when it's in the col-sm state
    it will hide when it's col-xs or col-md or col-lg

  the show-from-xs/sm/md/lg classes are to show an element from the specified column and lower

    example: "show-from-md" will show the elment from col-md --> col-xs (md,sm & xs) will be shown
*/
/****************************************
  show from lg same as permanent show
*****************************************/

.show-from-md,
.show-from-xs,
.show-from-sm {
  display: inherit;
}

.show,
.show-from-lg {
  display: inherit;
}
/**************
  only col-xs
***************/
@media only screen and (max-width: @medium-screen-width) {
  .show-xs {
    display: inherit;
  }
}
/**************
  only col-sm
***************/
@media only screen and (min-width: @medium-screen-width) and (max-width: @large-screen-width) {
  .show-sm {
    display: inherit;
  }
}
/**************
  only col-md
***************/
@media only screen and (min-width: @large-screen-width) and (max-width: @extralarge-screen-width) {
  .show-md {
    display: inherit;
  }
}
/**************
  only col-lg
***************/
@media only screen and (min-width: @extralarge-screen-width) {
  .show-lg {
    display: inherit;
  }
}
/**************
  from col-xs
***************/
@media only screen and (max-width: @medium-screen-width) {
  // TODO From = bounded minimum, not bounded maximum.  Rename
  .show-from-xs {
    display: none !important;
  }
}
/**************
  from col-sm
***************/
@media only screen and (max-width: @medium-screen-width) {
  .show-from-sm {
    display: none !important;
  }
}

/**************
  from col-md
***************/
@media only screen and (max-width: @large-screen-width) {
  .show-from-md {
    display: none !important;
  }
}

/* SORTING */
.sort-ascending,
.sort-descending,
.sort-sortable {
  position: relative;

  &::after {
    position: absolute;
    right: 0;
    top: 0;
    font-family: FontAwesome;
    color: @accent-blue;
  }
  @media only screen and (max-width: @medium-screen-width) {
    &::after {
      position: absolute;
      right: -11px;
      top: 0;
      font-family: FontAwesome;
      color: @accent-blue;
    }
  }
}

.sort-sortable:after {
  content: '\f0dc';
  color: @accent-blue-ripple;
}

.sort-ascending:after {
  content: '\f0de';
}

.sort-descending:after {
  content: '\f0dd';
}

/*******************
  modal styles
*******************/
.spanStyle {
  font-size: @big-font * 1.3;
  font-weight: @bold;
}

.multiModalWarning {
  font-size: @big-font;
  font-weight: @bold;
  color: @error;
}

.row {
  margin-left: -5px;
  margin-right: -5px;
}

[class*='col-'] {
  padding-left: 5px;
  padding-right: 5px;
}

.no_margin {
  margin: 0;
}

.ngx-pagination {
  border-radius: 20px;
  height: 40px;
  display: flex;
  padding: 0;
  font-size: @medium-font;
  color: @blue-underline;
  font-weight: 300;
  margin: 1em 0;
}

.ngx-pagination li {
  display: flex !important;
  align-items: center;
  color: @blue-underline;
  border: 1px solid @light-blue-grey;
  margin: 0 !important;
  cursor: pointer;

  & + li {
    border-left-width: 0 !important;
  }

  &:hover {
    background-color: @light-blue-grey;

    a {
      background-color: transparent;
    }
  }

  &.pagination-next,
  &.pagination-previous {
    border-color: @light-blue-grey;
    border-width: 1px;
    border-style: solid;
  }

  &.pagination-previous {
    border-top-left-radius: 20px;
    border-bottom-left-radius: 20px;

    &::before,
    &.disabled::before {
      margin-right: 0;
    }
  }

  &.pagination-next {
    border-top-right-radius: 20px;
    border-bottom-right-radius: 20px;

    a::after,
    &.disabled::after {
      margin-left: 0;
    }
  }

  &.current {
    background-color: @light-blue;
    color: @blue-underline;
  }
}

// Reset bootstrap styles
.label {
  color: @font-color;
  text-align: left;
  padding: 0;
}

label {
  font-weight: initial;
}

[class*='end-'] {
  float: right;
}

.col-xs,
.col-sm,
.col-md,
.col-lg {
  flex: 1;
  word-break: break-word;
}

a {
  &:focus {
    outline: none;
  }

  &:hover {
    text-decoration: none;
  }
}

.mat-menu-item {
  &.disabled {
    color: @disabled-font;
    &:hover {
      cursor: not-allowed;
    }
  }
}

/*******************
  Bootstrap col-xl classes
*******************/

@media (min-width: 1200px) and (max-width: 1599px) {
  .hidden-lg {
    display: none !important;
  }
}

.visible-xl-block,
.visible-xl-inline,
.visible-xl-inline-block,
.visible-xl {
  display: none !important;
}

@media (min-width: 1600px) {
  .container {
    width: 1570px;
  }

  .col-xl-1,
  .col-xl-2,
  .col-xl-3,
  .col-xl-4,
  .col-xl-5,
  .col-xl-6,
  .col-xl-7,
  .col-xl-8,
  .col-xl-9,
  .col-xl-10,
  .col-xl-11,
  .col-xl-12 {
    float: left;
  }

  .col-xl-12 {
    width: 100%;
  }

  .col-xl-11 {
    width: 91.66666667%;
  }

  .col-xl-10 {
    width: 83.33333333%;
  }

  .col-xl-9 {
    width: 75%;
  }

  .col-xl-8 {
    width: 66.66666667%;
  }

  .col-xl-7 {
    width: 58.33333333%;
  }

  .col-xl-6 {
    width: 50%;
  }

  .col-xl-5 {
    width: 41.66666667%;
  }

  .col-xl-4 {
    width: 33.33333333%;
  }

  .col-xl-3 {
    width: 25%;
  }

  .col-xl-2 {
    width: 16.66666667%;
  }

  .col-xl-1 {
    width: 8.33333333%;
  }

  .col-xl-pull-12 {
    right: 100%;
  }

  .col-xl-pull-11 {
    right: 91.66666667%;
  }

  .col-xl-pull-10 {
    right: 83.33333333%;
  }

  .col-xl-pull-9 {
    right: 75%;
  }

  .col-xl-pull-8 {
    right: 66.66666667%;
  }

  .col-xl-pull-7 {
    right: 58.33333333%;
  }

  .col-xl-pull-6 {
    right: 50%;
  }

  .col-xl-pull-5 {
    right: 41.66666667%;
  }

  .col-xl-pull-4 {
    right: 33.33333333%;
  }

  .col-xl-pull-3 {
    right: 25%;
  }

  .col-xl-pull-2 {
    right: 16.66666667%;
  }

  .col-xl-pull-1 {
    right: 8.33333333%;
  }

  .col-xl-pull-0 {
    right: auto;
  }

  .col-xl-push-12 {
    left: 100%;
  }

  .col-xl-push-11 {
    left: 91.66666667%;
  }

  .col-xl-push-10 {
    left: 83.33333333%;
  }

  .col-xl-push-9 {
    left: 75%;
  }

  .col-xl-push-8 {
    left: 66.66666667%;
  }

  .col-xl-push-7 {
    left: 58.33333333%;
  }

  .col-xl-push-6 {
    left: 50%;
  }

  .col-xl-push-5 {
    left: 41.66666667%;
  }

  .col-xl-push-4 {
    left: 33.33333333%;
  }

  .col-xl-push-3 {
    left: 25%;
  }

  .col-xl-push-2 {
    left: 16.66666667%;
  }

  .col-xl-push-1 {
    left: 8.33333333%;
  }

  .col-xl-push-0 {
    left: auto;
  }

  .col-xl-offset-12 {
    margin-left: 100%;
  }

  .col-xl-offset-11 {
    margin-left: 91.66666667%;
  }

  .col-xl-offset-10 {
    margin-left: 83.33333333%;
  }

  .col-xl-offset-9 {
    margin-left: 75%;
  }

  .col-xl-offset-8 {
    margin-left: 66.66666667%;
  }

  .col-xl-offset-7 {
    margin-left: 58.33333333%;
  }

  .col-xl-offset-6 {
    margin-left: 50%;
  }

  .col-xl-offset-5 {
    margin-left: 41.66666667%;
  }

  .col-xl-offset-4 {
    margin-left: 33.33333333%;
  }

  .col-xl-offset-3 {
    margin-left: 25%;
  }

  .col-xl-offset-2 {
    margin-left: 16.66666667%;
  }

  .col-xl-offset-1 {
    margin-left: 8.33333333%;
  }

  .col-xl-offset-0 {
    margin-left: 0;
  }

  .visible-xl {
    display: block !important;
  }

  table.visible-xl {
    display: table;
  }

  tr.visible-xl {
    display: table-row !important;
  }

  th.visible-xl,
  td.visible-xl {
    display: table-cell !important;
  }

  .visible-xl-block {
    display: block !important;
  }

  .visible-xl-inline {
    display: inline !important;
  }

  .visible-xl-inline-block {
    display: inline-block !important;
  }

  .hidden-xl {
    display: none !important;
  }
}

.align_center-md {
  @media only screen and (min-width: 62em) {
    display: flex;
    align-items: center;
  }
}

.loading-progress-bar {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 100;

  md-progress-bar {
    height: 10px;
  }
}

//Drag and Drop styles
.gu-transit {
  display: none !important;
}

.template.gu-mirror {
  &.gu-mirror {
    cursor: move;
  }

  border: 1px solid @disabled;
  padding: 10px;
  display: flex;
  align-content: center;

  & + .template {
    margin-top: 10px;
  }

  .drag_icon {
    color: @accent-blue;
    font-size: @big-font;
  }

  .text {
    padding-left: 10px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    font-weight: 300;

    span {
      line-height: @base-font;
    }
  }
}

.vert_center {
  display: flex;
  align-items: center;
}
